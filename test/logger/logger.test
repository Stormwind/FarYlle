package require tcltest
namespace import ::tcltest::*

source logger/Logger.tcl

test createLogger {} -body {
  set logger [Logger new]
  info object class $logger
} -result "::Logger"

test getAllLogLevelsIfNoneExists {} -body {
  $logger getAllLogLevels
} -result ""

test addLogLevel {} -body {
  $logger addLogLevel "info" 0
} -result 1

test addExistsingLogLevel {} -body {
  try {
    $logger addLogLevel "info" 0
  } trap {LOG EXISTINGLEVEL} {message} {
    puts $message
  }
} -output "Cannot add log level 'info', because it already exists.\n"

test getAllLogLevels {} -body {
  $logger addLogLevel "debug" 0
  $logger getAllLogLevels
} -result "debug info"

test deleteLogLevel {} -body {
  $logger deleteLogLevel "debug"
} -result 1

test deleteNoneExistingLogLevel {} -body {
  $logger deleteLogLevel "debug"
} -result 0

test setLogChannel {} -body {
  $logger setLogChannel "info" stdout
} -result 1

test getLogChannel {} -body {
  $logger getLogChannel "info"
} -result "stdout"

test setInvalidLogChannel {} -body {
  try {
    $logger setLogChannel "foobar" stdout
    } trap {LOG BADLEVEL} {message} {
      puts $message
    }
} -output "Cannot set channel for log level 'foobar', because this log level does not exist.\n"

test getInvalidLogChannel {} -body {
  try {
    $logger getLogChannel "foobar"
  } trap {LOG BADLEVEL} {message} {
    puts $message
  }
} -output "Cannot return channel for log level 'foobar', because this log level does not exist.\n"

test logInfo {} -body {
  $logger logMessage "info" "Info log message."
} -output "Info log message.\n" -result 1

test logInfoToEmptyChannel {} -body {
  $logger setLogChannel "info" 0
  $logger logMessage "info" "Info log message."
} -result 0

test LogMessageToNonExistingChannel {} -body {
  try {
    $logger logMessage "foobar" "Foobar log message."
  } trap {LOG BADLEVEL} {message} {
    puts $message
  }
} -output "Cannot log message to level 'foobar', because this log level does not exist.\n"

cleanupTests
